{
  "recommendations": [
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    }
  ],
  "articles": [
    {
      "userId": "1",
      "createdAt": "08.08.23",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2023 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 0,
      "type": [
        "IT",
        "Programming"
      ],
      "blocks": [
        {
          "id": "Z7Q3AyYtNDkE0r2mzkckV",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "OpMuTg_AX93Zu4DJ7nxw7",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.        "
            },
            {
              "id": "mK9yOnRQBx0HWX9oHg41r",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
            },
            {
              "id": "bw2Nnvhh2oWCz3FQkHngl",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MuDyHV0vKcyTvANvaIlX3",
          "type": "CODE",
          "lines": 11,
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;     "
        },
        {
          "id": "Uih64N54F2Rv2l1ZHQvDg",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "xkhpQhiCty0tRqBFIqakq",
              "text": "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.\n            "
            },
            {
              "id": "n-yJEfDrGij65KxhVbm3h",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "L4YqB-8u_DAMjp-0jj2T1",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png      ",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "OgthAs3N4T5k0G44ESxKw",
          "type": "CODE",
          "lines": 9,
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "hN5WUU9oxve3KtdPxCish",
          "title": "Заголовок этого блока",
          "paragraphs": [
            {
              "id": "_lerxO0Auozut5E8qHZBT",
              "text": "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.\n            "
            },
            {
              "id": "of7mZnSgJdw1GI__tqz6i",
              "text": "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:\n          "
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "8rGgk9ePjItX2OLVMI0dU",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        }
      ],
      "id": "k2nvbFr"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "JavaScript Frameworks",
      "subtitle": "The Evolution of JavaScript Frameworks",
      "img": "https://raygun.com/blog/images/popular-javascript-frameworks/feature.png",
      "views": 0,
      "type": [
        "IT",
        "Science",
        "Education",
        "Economics",
        "Mathematics"
      ],
      "blocks": [
        {
          "id": "9gRkY2Jpld1bXfz9ZUMWI",
          "title": "Introduction",
          "paragraphs": [
            {
              "id": "4jRNjS8zljedQ7mSGwEkx",
              "text": "JavaScript has come a long way since its inception in 1995. Over the years, numerous frameworks have emerged to make web development more efficient and organized. In this article, we will explore the evolution of JavaScript frameworks and how they have shaped the modern web development landscape."
            },
            {
              "id": "MwkiKXGsm2mz9F3GdpHBD",
              "text": "Let's dive into the history of JavaScript frameworks and understand the significant milestones along the way."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "gH7kTDFGJN2Mhq4e6XWut",
          "title": "The Emergence of jQuery",
          "paragraphs": [
            {
              "id": "fR5yRtSnebLmCXAv6E1cQ",
              "text": "In the mid-2000s, jQuery became the dominant JavaScript library. It simplified DOM manipulation and provided an easier way to handle events. Developers found it much more convenient to work with jQuery, leading to its widespread adoption across the web development community."
            },
            {
              "id": "3nVd6khsCZtIu8fjvKYGb",
              "text": "jQuery's success paved the way for more ambitious JavaScript frameworks to emerge."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "rNfjzNLFvEXzYsBgDQKNg",
          "src": "https://www.devopsschool.com/blog/wp-content/uploads/2022/03/jquery.png",
          "title": "Figure 2 - The Rise of jQuery",
          "type": "IMAGE"
        },
        {
          "id": "39zR5iADQWHB6a7oLPFty",
          "title": "The Era of AngularJS",
          "paragraphs": [
            {
              "id": "CD1YZTnGRdwzajYBzTw1e",
              "text": "Around 2010, AngularJS, developed by Google, introduced a new paradigm in web application development. It brought the concept of declarative programming and data binding, enabling developers to build dynamic and complex web applications with ease."
            },
            {
              "id": "9N6RL3GsJVT5fZO1MiEQo",
              "text": "AngularJS gained a massive following and quickly became the go-to framework for single-page applications."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "z3uzxLpVKP8HN6fS1jQbK",
          "src": "https://miro.medium.com/v2/resize:fit:1400/1*R1mfXLP9edcArZXwmGbGag.jpeg",
          "title": "Figure 3 - The Rise of AngularJS",
          "type": "IMAGE"
        },
        {
          "id": "baEwQArHprDQeJqPzmIsr",
          "title": "The Advent of React",
          "paragraphs": [
            {
              "id": "QzgYwKIc9nbYFNe5zJRuS",
              "text": "In 2013, Facebook introduced React, a revolutionary JavaScript library for building user interfaces. React's virtual DOM and component-based architecture brought unparalleled performance and reusability, making it a favorite among developers."
            },
            {
              "id": "6qAYuK0UOw4gW9jP5zCwJ",
              "text": "React's popularity soared, and it quickly became the cornerstone of modern web development, leading to the development of the vast React ecosystem."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "zmx1eOhumYj6PKF2VQzPe",
          "src": "https://repository-images.githubusercontent.com/37153337/9d0a6780-394a-11eb-9fd1-6296a684b124",
          "title": "Figure 4 - The Rise of React",
          "type": "IMAGE"
        },
        {
          "id": "wJcLhk5BvEPk0gQzn9HBE",
          "title": "The Rise of Vue.js",
          "paragraphs": [
            {
              "id": "x4UEnkLJfqTUY1vQ7pU9N",
              "text": "In the mid-2010s, Vue.js emerged as a lightweight and flexible JavaScript framework. Its ease of integration and gentle learning curve attracted developers seeking a simpler alternative to other frameworks."
            },
            {
              "id": "EiJKn5Jc6UzIGx8EXeTNQ",
              "text": "Vue.js steadily gained popularity and developed a strong community of dedicated users."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "pJk8MnXLvnG76gN9BsIQe",
          "src": "https://cdn.sanity.io/images/8edntncj/production/7cb22a8a9885468d96662f6ece61ceb2bc95666d-500x300.png",
          "title": "Figure 5 - The Rise of Vue.js",
          "type": "IMAGE"
        },
        {
          "id": "uHJgLmfC0YpZ6HYHvQKyt",
          "title": "The Future of JavaScript Frameworks",
          "paragraphs": [
            {
              "id": "ayZb67RE18mfq9kF5DLtD",
              "text": "As we move into the future, the JavaScript ecosystem continues to evolve rapidly. New frameworks and libraries are constantly emerging, each with its unique features and strengths."
            },
            {
              "id": "xQXtrFlKyVp93iRlZ3x4P",
              "text": "The competition between frameworks remains fierce, and developers must stay up-to-date with the latest trends and best practices to make informed decisions about their tech stack."
            }
          ],
          "type": "TEXT"
        }
      ],
      "id": "d3ab89c"
    },
    {
      "userId": "2",
      "createdAt": "04.08.23",
      "title": "Python",
      "subtitle": "Python: A Versatile Language for Modern Development",
      "img": "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/1200px-Python-logo-notext.svg.png",
      "views": 0,
      "type": [
        "IT",
        "Science"
      ],
      "blocks": [
        {
          "id": "1HdKJcWL9XwvKFRhwEgje",
          "title": "Introduction",
          "paragraphs": [
            {
              "id": "J6smErTpxnbGqydOTahXz",
              "text": "Python is a powerful and widely-used programming language known for its simplicity and versatility. Since its creation in the late 1980s, Python has become a favorite among developers for a wide range of applications, including web development, data analysis, artificial intelligence, and automation."
            },
            {
              "id": "IwsYrjVXLRGqrXZl94HPT",
              "text": "In this article, we will explore the key features and use cases of Python, as well as the reasons behind its popularity in the modern development landscape."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "T3G4mnZLkRz7uN2HCw8dy",
          "src": "https://example.com/path/to/python-eco.png",
          "title": "Figure 1 - The Python Ecosystem",
          "type": "IMAGE"
        },
        {
          "id": "9KxEuJI8Nr6BWlZzy5FrP",
          "title": "Simple Syntax and Readability",
          "paragraphs": [
            {
              "id": "gN7cx96rSgMCovXZakH7G",
              "text": "One of Python's strengths is its simple and readable syntax, which makes it easy for both beginners and experienced developers to write and understand code. The language's use of indentation for code blocks enhances readability and enforces consistent coding styles across projects."
            },
            {
              "id": "Lp9zHuecPfg2Fkt5bB5uS",
              "text": "The straightforward and expressive nature of Python code fosters rapid development and reduces the chances of bugs or errors in the codebase."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "DZJ1mQghP9NE0ovP2RxBJ",
          "src": "https://example.com/path/to/python-code.png",
          "title": "Figure 2 - Python Code Example",
          "type": "IMAGE"
        },
        {
          "id": "JSJKbDNWfM2a5OeCcIMiZ",
          "title": "Extensive Standard Library",
          "paragraphs": [
            {
              "id": "IqvscbwX3gyO9zOJnVswl",
              "text": "Python's standard library is rich with pre-built modules and packages that cover a wide range of functionalities. This extensive library saves developers time and effort by providing ready-to-use tools for tasks such as file I/O, networking, regular expressions, and more."
            },
            {
              "id": "1Aq7gAd67P3oqP9I7fl7J",
              "text": "The availability of these modules fosters code reuse and promotes best practices in software development."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "XZ5E0A28Cm34SlMoKGjY9",
          "src": "https://example.com/path/to/python-standard-library.png",
          "title": "Figure 3 - Python Standard Library",
          "type": "IMAGE"
        },
        {
          "id": "L2PzRnxrYXyM9Uopq6y9k",
          "title": "Versatility in Application",
          "paragraphs": [
            {
              "id": "8LY6MCtENwQz5P3ht8OZv",
              "text": "Python's versatility allows it to be used in a wide variety of applications. It excels in web development with frameworks like Django and Flask, making it easy to build scalable and robust web applications."
            },
            {
              "id": "R7eWTdQ0w2gNKhGvlNhtq",
              "text": "Additionally, Python is a popular language for data science and machine learning, with libraries like NumPy, pandas, and scikit-learn providing powerful tools for data analysis and modeling."
            },
            {
              "id": "mQWuUzOT6N9jEGPUEhG2M",
              "text": "Python's adaptability extends to automation, scripting, and backend development, making it an all-around choice for modern developers."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "q6UM2h4vE0r2hdK5JZ7Ay",
          "src": "https://example.com/path/to/python-webdev.png",
          "title": "Figure 4 - Python in Web Development",
          "type": "IMAGE"
        },
        {
          "id": "dG1W3k7aPZ2xXoINgJf5B",
          "title": "Thriving Community and Support",
          "paragraphs": [
            {
              "id": "M3LfPaqYHS4j5UkC8Bhsn",
              "text": "Python's popularity is not only due to its technical merits but also because of its vibrant and welcoming community. The Python community actively contributes to the language's growth and development through open-source projects, libraries, and forums."
            },
            {
              "id": "gFejZvyjkYr9OQF8X6Lrq",
              "text": "The extensive support and documentation available for Python make it an excellent choice for developers looking to learn, collaborate, and solve problems efficiently."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "WEzm8KuyUzFgQb25KJ5St",
          "src": "https://example.com/path/to/python-community.png",
          "title": "Figure 5 - Python Community",
          "type": "IMAGE"
        }
      ],
      "id": "9e08f21"
    },
    {
      "userId": "2",
      "createdAt": "03.08.23",
      "title": "Kotlin",
      "subtitle": "The Power of Kotlin: A Modern Programming Language",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [
        {
          "id": "CpF9GJ8lVsZBR2jd64mPT",
          "title": "Introduction",
          "paragraphs": [
            {
              "id": "Ekp8FvgbsS3E45NbqD1mZ",
              "text": "Kotlin is a statically-typed programming language that runs on the Java Virtual Machine (JVM). It was introduced in 2011 by JetBrains, the same company behind popular IDEs like IntelliJ IDEA and Android Studio. Since its release, Kotlin has gained tremendous popularity among developers for its expressiveness, safety, and interoperability with existing Java codebases."
            },
            {
              "id": "NBY6qkr9Mv82RbTo3fLWU",
              "text": "In this article, we will explore the key features and advantages of Kotlin and why it has become a go-to language for Android app development, backend systems, and more."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "dc9fWqpNzHzD4VX0TeBaY",
          "src": "https://example.com/path/to/kotlin-code.png",
          "title": "Figure 1 - Kotlin Code Example",
          "type": "IMAGE"
        },
        {
          "id": "I4JqwHhIz1bY9m7UR4vst",
          "title": "Concise and Readable Syntax",
          "paragraphs": [
            {
              "id": "4dX2g0KGKtACe8tYrV5lN",
              "text": "Kotlin's syntax is designed to be concise and readable, making it a pleasure to write and maintain code. With features like type inference, data classes, and smart casts, Kotlin reduces boilerplate code and allows developers to express their intentions more clearly."
            },
            {
              "id": "XhJ7DpzTnaDrBT5vGvQhz",
              "text": "The language's emphasis on readability promotes collaboration among team members and makes it easier for newcomers to get up to speed quickly."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "dQH8EDCtRmE3VnXN6SbWY",
          "src": "https://example.com/path/to/kotlin-readability.png",
          "title": "Figure 2 - Kotlin Readability",
          "type": "IMAGE"
        },
        {
          "id": "qJ84fsE5zo6RBvg2mDLfX",
          "title": "Null Safety and Type System",
          "paragraphs": [
            {
              "id": "ZMEwQ9P6QaMFWVHknZg5K",
              "text": "Kotlin's type system is designed to eliminate the notorious NullPointerException (NPE) that often plagues Java code. With its null safety feature, Kotlin distinguishes nullable types from non-nullable types, reducing the risk of unexpected null pointer errors at runtime."
            },
            {
              "id": "gZmPAWlgqR4CjWeGfs6J9",
              "text": "Developers are encouraged to write safer code by explicitly handling nullable types, leading to more robust and stable applications."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "Lq9SUI3JQqbF6re2XnjGK",
          "src": "https://example.com/path/to/kotlin-nullsafety.png",
          "title": "Figure 3 - Kotlin Null Safety",
          "type": "IMAGE"
        },
        {
          "id": "Z4sxrbzHtbHn1uAfRqLd3",
          "title": "Seamless Java Interoperability",
          "paragraphs": [
            {
              "id": "2j6TkcvikI74zgSr1oPcL",
              "text": "Kotlin is fully interoperable with Java, which means that developers can seamlessly use existing Java libraries and frameworks in Kotlin projects. This compatibility allows for a smooth migration from Java to Kotlin or using both languages in the same codebase."
            },
            {
              "id": "z5dTPwMab67Ks3TvfUkJA",
              "text": "Developers can take advantage of Kotlin's modern features while leveraging the vast ecosystem and community support of Java."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "4FUbZwCMOLNijRvHjEGPQ",
          "src": "https://example.com/path/to/kotlin-java-interoperability.png",
          "title": "Figure 4 - Kotlin Java Interoperability",
          "type": "IMAGE"
        },
        {
          "id": "XKpz7FSKpGJ61ZAPLYWjH",
          "title": "Coroutines for Asynchronous Programming",
          "paragraphs": [
            {
              "id": "eMqWsryfbVStzOj5LJhQI",
              "text": "Kotlin introduces coroutines, a powerful feature for writing asynchronous and non-blocking code. Coroutines simplify the handling of background tasks and make it easier to manage complex asynchronous operations."
            },
            {
              "id": "7LQFSU9YvMJDofx8fSR95",
              "text": "With coroutines, developers can avoid callback hell and write more maintainable and efficient asynchronous code."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "ZoEutJ2N4PY0KGqXWvTcY",
          "src": "https://example.com/path/to/kotlin-coroutines.png",
          "title": "Figure 5 - Kotlin Coroutines",
          "type": "IMAGE"
        }
      ],
      "id": "da72c56"
    },
    {
      "userId": "1",
      "createdAt": "04.08.23",
      "title": "Rust",
      "subtitle": "Rust: Empowering Systems Programming",
      "img": "https://www.rust-lang.org/static/images/rust-social-wide.jpg",
      "views": 0,
      "type": [
        "Mathematics",
        "Science"
      ],
      "blocks": [
        {
          "id": "S1nz2JlP3KyYv5FtDcGXq",
          "title": "Introduction",
          "paragraphs": [
            {
              "id": "0uP4E5oV9I7mqQlXrcZpw",
              "text": "Rust is a modern systems programming language that combines performance, safety, and concurrency. Developed by Mozilla, Rust was designed to address the challenges of writing low-level, high-performance code while preventing common programming errors like null pointer dereferences, data races, and buffer overflows."
            },
            {
              "id": "JL83iPrfK49pRzUa5Mg2w",
              "text": "In this article, we will explore the key features of Rust that make it a compelling choice for systems programming, as well as its growing popularity in various domains, including web assembly, embedded systems, and networking applications."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "fqmVGs3LeR2U4aHDiHjPK",
          "src": "https://www.oreilly.com/content/wp-content/uploads/sites/2/2020/01/rust_screenshot-7eb4f918d8731b57719ed802e40cec8b.png",
          "title": "Figure 1 - Rust Code Example",
          "type": "IMAGE"
        },
        {
          "id": "21Gm5Lru4VhqwnB0U8iJK",
          "title": "Memory Safety and Ownership",
          "paragraphs": [
            {
              "id": "R84A3YU2sNOztEkEw5c1u",
              "text": "Rust's ownership model enforces strict memory safety at compile-time. It eliminates the need for a garbage collector and ensures that memory is managed efficiently without incurring runtime overhead. The concept of ownership, borrowing, and lifetimes allows Rust to prevent common bugs like null pointer dereferences and double frees."
            },
            {
              "id": "cAilHE7qo4vh5Us6JzCd3",
              "text": "Developers can write high-performance code in Rust without sacrificing safety, making it an excellent choice for systems programming where security and stability are crucial."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "gYDx4wE2vCkOIHrQa97SM",
          "src": "https://example.com/path/to/rust-memory-safety.png",
          "title": "Figure 2 - Rust Memory Safety",
          "type": "IMAGE"
        },
        {
          "id": "1qFTDG2KmVr4F5zb9sdMX",
          "title": "Fearless Concurrency",
          "paragraphs": [
            {
              "id": "oQ7YjchRPn46GuKrBfUe5",
              "text": "Rust's strong type system and ownership model enable safe and efficient concurrent programming. With features like the 'Send' and 'Sync' traits, Rust ensures that data can be safely shared between threads and prevents data races at compile-time."
            },
            {
              "id": "3LjJUjA63xqKb6DvG4kZY",
              "text": "Developers can write concurrent code in Rust with confidence, knowing that the language's safety guarantees will catch potential issues during compilation."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "MQw0yDsjZtUkL6lfhINjE",
          "src": "https://example.com/path/to/rust-concurrency.png",
          "title": "Figure 3 - Rust Concurrency",
          "type": "IMAGE"
        },
        {
          "id": "3rD8qSR54PJtE7QFjbTZV",
          "title": "Web Assembly and Beyond",
          "paragraphs": [
            {
              "id": "zGzHjWiyTUnodgEH0pmI7",
              "text": "Rust's ability to produce small, fast, and safe binaries has made it a popular choice for WebAssembly (Wasm) development. Wasm allows running Rust code on web browsers, enabling high-performance applications on the web."
            },
            {
              "id": "PbU97rTJvVYnxVHtP1eEf",
              "text": "Beyond Wasm, Rust's versatility extends to embedded systems and networking applications, where performance and reliability are critical."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "5gHrWIcFJ1vZNqa90oEpw",
          "src": "https://example.com/path/to/rust-webassembly.png",
          "title": "Figure 4 - Rust Web Assembly",
          "type": "IMAGE"
        },
        {
          "id": "7UuIzKoC1tDpL9vhbY3nA",
          "title": "Community and Future Growth",
          "paragraphs": [
            {
              "id": "zqEf6n3bsDCXyZvSlz91a",
              "text": "Rust has a passionate and active community that continues to contribute to the language's development and ecosystem. The Rust community embraces open-source values, promoting collaboration and knowledge sharing."
            },
            {
              "id": "MigBmskRPn46GurAbfUe5",
              "text": "As Rust gains traction in various domains, its future looks promising, and it is expected to become even more prevalent in the world of systems programming and beyond."
            }
          ],
          "type": "TEXT"
        },
        {
          "id": "UiL1msK1ODkIe6jYp1HzE",
          "src": "https://example.com/path/to/rust-community.png",
          "title": "Figure 5 - Rust Community",
          "type": "IMAGE"
        }
      ],
      "id": "be7a308"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "MuDYAJe"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "zOgbnoc"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "7IkA_Gk"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "LYwPXMc"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "_Z7cLw4"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "MXIk1aW"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "Z0wukbe"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "jR9x-rA"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "u37zKuH"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "FNsxAna"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "1nQsWGA"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "NZLwfqc"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "RT00itO"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "FE_Oc4U"
    },
    {
      "title": "title 2",
      "subtitle": "title 3",
      "img": "https://kotlinlang.org/assets/images/twitter/general.png",
      "views": 0,
      "type": [],
      "blocks": [],
      "createdAt": "03.08.23",
      "userId": "1",
      "id": "GISZENo"
    }
  ],
  "comments": [
    {
      "text": "eqwe",
      "articleId": "k2nvbFr",
      "userId": "1",
      "id": 1
    },
    {
      "text": "asdds",
      "articleId": "k2nvbFr",
      "userId": "1",
      "id": 2
    },
    {
      "text": "nice articele!!",
      "articleId": "d3ab89c",
      "userId": "1",
      "id": 3
    },
    {
      "text": "dfsafsdaf",
      "articleId": "k2nvbFr",
      "userId": "1",
      "id": 4
    },
    {
      "text": "",
      "articleId": "d3ab89c",
      "userId": "1",
      "id": 5
    },
    {
      "text": "asdf",
      "articleId": "k2nvbFr",
      "userId": "1",
      "id": 6
    }
  ],
  "users": [
    {
      "id": "1",
      "username": "admin",
      "roles": [
        "ADMIN",
        "MANAGER"
      ],
      "password": "123",
      "avatar": "https://e0.pxfuel.com/wallpapers/668/829/desktop-wallpaper-killua-zoldyck-killuazoldyck-hunterxhunter-killuazoldyck-hunterxhunterkillua-killua.jpg"
    },
    {
      "id": "2",
      "username": "user",
      "roles": [
        "USER"
      ],
      "password": "123",
      "avatar": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
    }
  ],
  "profiles": [
    {
      "id": "1",
      "username": "admin",
      "first": "Yura",
      "lastname": "Jsds",
      "age": "23",
      "currency": "PL",
      "country": "Poland",
      "city": "Kyiv",
      "avatar": "https://e0.pxfuel.com/wallpapers/668/829/desktop-wallpaper-killua-zoldyck-killuazoldyck-hunterxhunter-killuazoldyck-hunterxhunterkillua-killua.jpg"
    },
    {
      "id": "2",
      "first": "Yura",
      "lastname": "Jks",
      "age": "21",
      "currency": "UAH",
      "country": "Ukraine",
      "city": "Kyiv",
      "username": "user13",
      "avatar": "https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg"
    }
  ]
}